{"version":3,"sources":["services/phonebookApi.js","components/AddForm/AddForm.jsx","components/ContactsList/ContactsList.jsx","redux/phonebookSlice.js","components/ContactsFilter/ContactsFilter.jsx","components/phoneBook.jsx","App.js","redux/store.js","index.js"],"names":["phonebookApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContactByName","query","name","providesTags","deletePhone","mutation","id","url","method","invalidatesTags","addPhone","contact","body","phone","useGetContactByNameQuery","useDeletePhoneMutation","useAddPhoneMutation","AddFrom","phones","Form","action","onSubmit","e","preventDefault","find","el","target","value","toast","error","Group","className","controlId","Label","Control","type","pattern","title","required","Button","variant","ContactsList","onDelete","filter","useSelector","state","contacts","filtered","toLowerCase","includes","ListGroup","map","onClick","phonebookReducer","createSlice","initialState","items","reducers","payload","push","setFilter","filterPhonebook","actions","ContactsFilter","dispatch","useDispatch","onChange","currentTarget","PhoneBook","data","isLoading","App","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b702e7f1.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nexport const phonebookApi = createApi({\r\n  reducerPath: 'phonebookApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://620eeca5ec8b2ee2832efb48.mockapi.io/' }),\r\n  tagTypes:['Phone'],\r\n  endpoints: (builder) => ({\r\n    getContactByName: builder.query({\r\n      query: (name) => `phones`,\r\n      providesTags:['Phone']\r\n    }),\r\n    deletePhone: builder.mutation({\r\n      query: (id) => ({\r\n        url: `phones/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags:['Phone']\r\n    }),\r\n    addPhone: builder.mutation({\r\n      query: (contact) => ({\r\n        url: 'phones',\r\n        method: 'POST',\r\n        body: {\r\n          name: contact.name,\r\n          phone: contact.phone,\r\n        }\r\n      }),\r\n      invalidatesTags:['Phone']\r\n    })\r\n  }),\r\n})\r\n// https://620eeca5ec8b2ee2832efb48.mockapi.io/:endpoint\r\n\r\nexport const { useGetContactByNameQuery, useDeletePhoneMutation, useAddPhoneMutation } = phonebookApi;\r\n","\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAddPhoneMutation } from '../../services/phonebookApi';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport '../../App.css'\r\nimport toast from 'react-hot-toast';\r\nexport default function AddFrom({phones}) {\r\n  \r\n  const [addPhone] = useAddPhoneMutation();\r\n  const onSubmitFunc = (e) => {\r\n    e.preventDefault()\r\n    const checkDuplicate = phones.find(el =>\r\n      el.name === e.target.name.value)\r\n    \r\n    !checkDuplicate ? addPhone({\r\n      phone: e.target.phone.value,\r\n      name: e.target.name.value\r\n    })\r\n      : toast.error('Already in phonebook')\r\n  }\r\n  return (\r\n    <Form action=\"submit\" onSubmit={onSubmitFunc}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Contact name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n          <Form.Label>Number</Form.Label>\r\n          <Form.Control\r\n            type=\"tel\"\r\n            name=\"phone\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Button\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          >Add</Button>\r\n      </Form>\r\n  )\r\n}","import { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport '../../App.css';\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function ContactsList({phones, onDelete}) {\r\n \r\n  const filter = useSelector((state) => state.contacts.filter);\r\n  const filtered = phones.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter))\r\n  return (\r\n    <ListGroup>\r\n      <ul>\r\n        {filtered.map(({ phone, name, id }) => \r\n          <li key={id}>{name}: {phone} <button onClick={() => onDelete(id)}>X</button></li>\r\n        )}\r\n      </ul>\r\n    </ListGroup>\r\n  )\r\n}","\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nexport const phonebookReducer = createSlice({\r\n  name: 'phonebook',\r\n  initialState: {\r\n    items: [\r\n      { name: 'denis1', phone: '124-123-123', id: 'qwe1' },\r\n      { name: 'denis2', phone: '125-123-123', id: 'qwe2' },\r\n      { name: 'denis3', phone: '126-123-123', id: 'qwe3' },\r\n      \r\n    ],\r\n    filter:''\r\n  },\r\n  reducers: {\r\n    addPhone: (state, { payload }) => {\r\n      // state.items.push(payload)\r\n      // console.log(payload);\r\n      payload?.map(({name, phone, id}) => state.items.push({name, phone, id}))\r\n    },\r\n\r\n    deletePhone: (state, { payload }) => ({\r\n      items: state.items.filter(({ id }) =>\r\n        id !== payload),\r\n      filter: state.filter\r\n    }),\r\n\r\n    setFilter: (state, { payload }) =>\r\n      {state.filter = payload},\r\n    \r\n    filterPhonebook: (state, { payload }) => ({\r\n      items: state.items.filter(({ name }) =>\r\n        name.toLowerCase().includes(payload)),\r\n      filter: payload\r\n    })\r\n      \r\n  },\r\n})\r\n\r\nexport const { addPhone, deletePhone, setFilter, filterPhonebook } = phonebookReducer.actions\r\n\r\nexport default phonebookReducer.reducer","\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/phonebookSlice\";\r\nimport { Form } from 'react-bootstrap';\r\nimport '../../App.css'\r\nexport default function ContactsFilter() {\r\n\r\n  const dispatch = useDispatch();\r\n  const inputValueHandler = (e) => dispatch(setFilter(e.currentTarget.value));\r\n  \r\n  return (\r\n    <Form >\r\n      <Form.Group className=\"mb-3\" >\r\n        <Form.Label>Filter</Form.Label>\r\n        <Form.Control\r\n          type=\"text\" onChange={inputValueHandler}\r\n        />\r\n      </Form.Group>\r\n    </Form>\r\n  )\r\n}","import AddFrom from \"./AddForm/AddForm\";\r\nimport ContactsList from \"./ContactsList/ContactsList\";\r\nimport ContactsFilter from \"./ContactsFilter/ContactsFilter\";\r\nimport { useGetContactByNameQuery, useDeletePhoneMutation } from '../services/phonebookApi';\r\n\r\n\r\n\r\nexport const PhoneBook = () => {\r\n  const { data, isLoading } = useGetContactByNameQuery();\r\n  const [deletePhone] = useDeletePhoneMutation();\r\n  \r\n  return (\r\n    <div>\r\n      {data && <AddFrom phones={data}/>}\r\n      <ContactsFilter />\r\n      {data && <ContactsList phones={data} onDelete={ deletePhone}/>}\r\n      </div>\r\n  )\r\n}","import { PhoneBook } from './components/phoneBook';\nimport './App.css';\nimport { Toaster } from 'react-hot-toast';\nconst App = () => {\n  \n  return (\n    <div className=\"container\">\n      <Toaster />\n      <PhoneBook />\n    </div>\n  )\n}\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport phonebookReducer from './phonebookSlice';\r\n// import { setupListeners } from '@reduxjs/toolkit/query'\r\nimport { phonebookApi } from '../services/phonebookApi'\r\n// export const store = configureStore({\r\n//   // reducer: {\r\n//   //   todos: todosReducer,\r\n//   // },\r\n//   reducer: {\r\n//     contacts: phonebookReducer\r\n//   }\r\n// })\r\n\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: phonebookReducer,\r\n    [phonebookApi.reducerPath]: phonebookApi.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    [...getDefaultMiddleware(), phonebookApi.middleware],\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}